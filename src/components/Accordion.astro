---
import Icon from "astro-icon";

type Props = {
  iconOpen?: string;
  iconClosed?: string;
};

const { iconOpen = "mdi:minus", iconClosed = "mdi:plus" } = Astro.props;
---

<div
  class="accordion-group group flex w-full flex-col justify-between rounded-md border border-neutral-700 transition"
>
  <div
    class="accordion-header flex h-16 cursor-pointer items-center px-5 transition"
  >
    <Icon
      name={iconClosed}
      class="mr-5 h-8 text-white"
      id="accordion-icon-open"
    />
    <Icon
      name={iconOpen}
      class="mr-5 hidden h-8 text-white"
      id="accordion-icon-closed"
    />
    <slot name="header" />
  </div>
  <div class="accordion-content max-h-0 overflow-hidden px-5 pt-0">
    <div class="py-5 text-justify font-light leading-6">
      <slot name="content" />
    </div>
  </div>
</div>

<script>
  const accordionHeader = Array.from<HTMLElement>(
    document.querySelectorAll(".accordion-header")
  );
  const accordionContent = Array.from<HTMLElement>(
    document.querySelectorAll(".accordion-content")
  );

  accordionHeader.forEach((header: Element, index: number) => {
    header.addEventListener("click", () => {
      toggleIcon(header);
      toggleAccordionContent(index);
    });
  });

  function toggleIcon(header: Element) {
    const icon = header.querySelector("#accordion-icon-open") as HTMLElement;
    const icon2 = header.querySelector("#accordion-icon-closed") as HTMLElement;
    icon.classList.toggle("hidden");
    icon2.classList.toggle("hidden");
  }

  function toggleAccordionContent(index: number) {
    const content = accordionContent[index];
    const accordionMaxHeight = content.style.maxHeight;

    // Condition handling
    if (accordionMaxHeight === "" || accordionMaxHeight === "0px") {
      const newMaxHeight = content.scrollHeight + 32;
      content.style.maxHeight = `${newMaxHeight}px`;
    } else {
      content.style.maxHeight = "0px";
    }
  }
</script>

<style>
  .accordion-content {
    transition: max-height 300ms ease-in-out;
  }
</style>
